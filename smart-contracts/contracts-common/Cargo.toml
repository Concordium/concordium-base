[package]
name = "concordium-contracts-common"
version = "2.0.0"
authors = ["Concordium <developers@concordium.com>"]
edition = "2018"
license = "MPL-2.0"
description = "Common functionality used by smart contracts and the host environment on the Concordium blockchain."
homepage = "https://github.com/Concordium/concordium-contracts-common"
repository = "https://github.com/Concordium/concordium-contracts-common"
readme = "README.md"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
arbitrary = { version = "0.4", features = ["derive"], optional = true }

[dependencies.hashbrown]
version = "0.11"
default-features = false

[dependencies.fnv]
version = "1.0"
default-features = false

[dependencies.serde]
optional = true
features = ["derive"]
version = "1.0"

[dependencies.serde_json]
optional = true
version = "1.0"

[dependencies.chrono]
optional = true
version = "0.4.19"

[dependencies.base58check]
optional = true
version = "0.1"

[features]
default = ["std"]

std = ["fnv/std"]

derive-serde = ["serde", "serde_json", "std", "base58check", "chrono"]

fuzz = ["derive-serde", "arbitrary"]

[lib]
# Since we don't define an allocator in this crate, we can only produce an rlib
# directly.
crate-type = ["rlib"]

[dev-dependencies]
arbitrary = { version = "0.4", features = ["derive"] }
rand = "=0.7"
rand_pcg = "0.2.1"
