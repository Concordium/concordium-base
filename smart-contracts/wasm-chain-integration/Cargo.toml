[package]
name = "concordium-smart-contract-engine"
version = "6.0.0"
authors = ["Concordium <developers@concordium.com>"]
edition = "2021"
license-file = "../../LICENSE"
description = "Concordium's smart contract execution engine"
homepage = "https://github.com/Concordium/concordium-base/tree/main/smart-contracts/wasm-chain-integration"
repository = "https://github.com/Concordium/concordium-base/"

[features]
# If this feature is enabled  the ffi exports are going to be produced
# for use from Haskell.
enable-ffi = []
default=[]
fuzz-coverage = ["concordium-wasm/fuzz-coverage"]
fuzz = ["arbitrary", "concordium-contracts-common/fuzz"]
# Expose helpers for displaying the state of a V1 contract.
display-state = ["ptree"]
# enable construction of the state from streams.
async = ["futures"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
libc = "0.2"
anyhow = "1"
serde = "1.0"
num_enum = "0.6"
derive_more = "0.99"
sha2 = "0.10"
sha3 = "0.10"
secp256k1 = "0.22.2"
ed25519-zebra = "4"
thiserror = "1"
byteorder = "1.4"
tinyvec = {version = "1.5", features = ["alloc"]}
slab = "0.4.5"
ptree = { version = "0.4.0", optional = true }
futures = {version = "0.3", optional = true }
arbitrary = { version = "1.3", features = ["derive"], optional = true }
rand = { version = "=0.8", features = ["small_rng"] }

[dependencies.concordium-wasm]
path = "../wasm-transform"
version = "5"

[dependencies.concordium-contracts-common]
version = "9"
path = "../contracts-common/concordium-contracts-common"
features = ["derive-serde"]

[lib]
crate-type = ["cdylib", "staticlib", "rlib"]

[dev-dependencies]
criterion = { version = ">=0.3.4", features = ["html_reports"] }
quickcheck = "1.0.3"

[[bench]]
name = "wasm"
harness = false

[[bench]]
name = "v1-host-functions"
harness = false

[[bench]]
name = "trie_benches"
harness = false

[profile.release]
codegen-units = 1

[package.metadata.docs.rs]
features = ["display-state", "async"]
