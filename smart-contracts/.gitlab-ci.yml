image: "192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base:0.13"

stages:
  - lint
  - build
  - test

.generic:
  variables:
    RUSTFLAGS: -Dwarnings
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - rustc --version && cargo --version
    - git config --global url.https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/.insteadOf ssh://git@gitlab.com:22/
    - rustup target add wasm32-unknown-unknown

"cargo-concordium cargo:test":
  extends: .generic
  stage: test
  script:
    - cd cargo-concordium
    - cargo test

"cargo-concordium cargo:test":
  extends: .generic
  stage: test
  script:
    - cd cargo-concordium
    - cargo test

"wasm-transform lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - cd wasm-transform
    - cargo clippy --color=always --tests -- -Dclippy::all

"wasm-transform cargo:test":
  extends: .generic
  stage: test
  script:
    - cd wasm-transform
    - cargo test

"concordium-sc-base cargo:test":
  extends: .generic
  stage: test
  when: manual
  script:
    - cd rust-contracts/concordium-sc-base
    - cargo test

"counter cargo:test":
  extends: .generic
  stage: test
  when: manual
  script:
    - cd rust-contracts/example-contracts/counter
    - cargo test

"fib cargo:test":
  extends: .generic
  stage: test
  when: manual
  script:
    - cd rust-contracts/example-contracts/fib
    - cargo test

"escrow cargo:test":
  extends: .generic
  stage: test
  # Manual until testing works correctly
  when: manual
  script:
    - cd rust-contracts/example-contracts/escrow
    - cargo test

"lockup cargo:test":
  extends: .generic
  stage: test
  # Manual until testing works correctly
  when: manual
  script:
    - cd rust-contracts/example-contracts/lockup
    - cargo test

.generic-lint:
  extends: .generic

"cargo-concordium cargo:build-bench":
  extends: .generic-lint
  stage: build
  cache: {}
  script:
    - cd cargo-concordium
    - cargo bench --color=always --no-run

"cargo-concordium lint:fmt":
  extends: .generic-lint
  stage: lint
  image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-rust-fmt:2019-11-13
  script:
    - cd cargo-concordium
    - cargo fmt -- --color=always
    - test $(git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | wc -l) -eq 0 || (echo 'You have introduced some unformatted code:'; git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | sed 's/^/* /'; echo 'Please run `cargo fmt` and amend your MR.'; exit 1)

"cargo-concordium lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - cd cargo-concordium
    - echo "Running clippy"
    - cargo clippy --color=always --tests -- -Dclippy::all

"wasmer-interp lint:fmt":
  extends: .generic-lint
  stage: lint
  image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-rust-fmt:2019-11-13
  script:
    - cd wasmer-interp 
    - cargo fmt -- --color=always
    - test $(git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | wc -l) -eq 0 || (echo 'You have introduced some unformatted code:'; git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | sed 's/^/* /'; echo 'Please run `cargo fmt` and amend your MR.'; exit 1)

"wasmer-interp  lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - cd wasmer-interp 
    - echo "Running clippy"
    - cargo clippy --color=always --tests -- -Dclippy::all

"contracts-common lint:fmt":
  extends: .generic-lint
  stage: lint
  image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-rust-fmt:2019-11-13
  script:
    - cd contracts-common
    - cargo fmt -- --color=always --check || (echo "Please run `cargo fmt` and amend your MR"; exit 1)

"contracts-common  lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - cd contracts-common
    - echo "Running clippy"
    - cargo clippy --color=always --tests -- -Dclippy::all

"concordium-sc-base lint:fmt":
  extends: .generic-lint
  stage: lint
  image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-rust-fmt:2019-11-13
  script:
    - cd rust-contracts/concordium-sc-base
    - cargo fmt -- --color=always
    - test $(git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | wc -l) -eq 0 || (echo 'You have introduced some unformatted code:'; git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | sed 's/^/* /'; echo 'Please run `cargo fmt` and amend your MR.'; exit 1)

"concordium-sc-base lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - cd rust-contracts/concordium-sc-base
    - echo "Running clippy"
    - cargo clippy --color=always --tests -- -Dclippy::all

"concordium-sc-derive lint:fmt":
  extends: .generic-lint
  stage: lint
  image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-rust-fmt:2019-11-13
  script:
    - cd rust-contracts/concordium-sc-derive
    - cargo fmt -- --color=always
    - test $(git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | wc -l) -eq 0 || (echo 'You have introduced some unformatted code:'; git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | sed 's/^/* /'; echo 'Please run `cargo fmt` and amend your MR.'; exit 1)

"concordium-sc-derive lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - cd rust-contracts/concordium-sc-derive
    - echo "Running clippy"
    - cargo clippy --color=always --tests -- -Dclippy::all

"counter lint:fmt":
  extends: .generic-lint
  stage: lint
  image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-rust-fmt:2019-11-13
  script:
    - cd rust-contracts/example-contracts/counter
    - cargo fmt -- --color=always
    - test $(git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | wc -l) -eq 0 || (echo 'You have introduced some unformatted code:'; git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | sed 's/^/* /'; echo 'Please run `cargo fmt` and amend your MR.'; exit 1)

"counter lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - cd rust-contracts/example-contracts/counter
    - echo "Running clippy"
    - cargo clippy --color=always --tests -- -Dclippy::all

"fib lint:fmt":
  extends: .generic-lint
  stage: lint
  image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-rust-fmt:2019-11-13
  script:
    - cd rust-contracts/example-contracts/fib
    - cargo fmt -- --color=always
    - test $(git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | wc -l) -eq 0 || (echo 'You have introduced some unformatted code:'; git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | sed 's/^/* /'; echo 'Please run `cargo fmt` and amend your MR.'; exit 1)

"fib lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - cd rust-contracts/example-contracts/fib
    - echo "Running clippy"
    - cargo clippy --color=always --tests -- -Dclippy::all

"escrow lint:fmt":
  extends: .generic-lint
  stage: lint
  image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-rust-fmt:2019-11-13
  script:
    - cd rust-contracts/example-contracts/escrow
    - cargo fmt -- --color=always --check || (echo "Please run `cargo fmt` and amend your MR"; exit 1)

"escrow lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - cd rust-contracts/example-contracts/escrow
    - echo "Running clippy"
    - cargo clippy --color=always --tests -- -Dclippy::all

"lockup lint:fmt":
  extends: .generic-lint
  stage: lint
  image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-rust-fmt:2019-11-13
  script:
    - cd rust-contracts/example-contracts/lockup
    - cargo fmt -- --color=always --check || (echo "Please run `cargo fmt` and amend your MR"; exit 1)

"lockup lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - cd rust-contracts/example-contracts/lockup
    - echo "Running clippy"
    - cargo clippy --color=always --tests -- -Dclippy::all


"use-all-host-functions lint:fmt":
  extends: .generic-lint
  stage: lint
  image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-rust-fmt:2019-11-13
  script:
    - cd rust-contracts/example-contracts/use-all-host-functions
    - cargo fmt -- --color=always --check || (echo "Please run `cargo fmt` and amend your MR"; exit 1)

"use-all-host-functions lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - cd rust-contracts/example-contracts/use-all-host-functions
    - echo "Running clippy"
    - cargo clippy --color=always --tests -- -Dclippy::all


"rate-limited lint:fmt":
  extends: .generic-lint
  stage: lint
  image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-rust-fmt:2019-11-13
  script:
    - cd rust-contracts/example-contracts/rate-limited
    - cargo fmt -- --color=always --check || (echo "Please run `cargo fmt` and amend your MR"; exit 1)

"rate-limited lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - cd rust-contracts/example-contracts/rate-limited
    - echo "Running clippy"
    - cargo clippy --color=always --tests -- -Dclippy::all

