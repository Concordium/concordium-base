[package]
name = "idiss"
version = "0.2.0"
authors = ["Concordium AG <contact@concordium.com>"]
edition = "2018"

description = "Web-assembly exports of the identity issuance functionality needed by the identity provider."

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
pairing = "0.15"
ff = "0.5"
hex = "0.3"
serde = "1.0"
serde_json = "1.0"
chrono = "0.4"
ed25519-dalek = "=1.0.0-pre.3"
byteorder = "1.3"

[dependencies.crypto_common]
path = "../rust-src/crypto_common"
version = "0"

[dependencies.curve_arithmetic]
path = "../rust-src/curve_arithmetic"
version = "0"

[dependencies.id]
path = "../rust-src/id"
version = "0"

[dependencies.ps_sig]
path = "../rust-src/ps_sig"
version = "0"

[build-dependencies.crypto_common]
path = "../rust-src/crypto_common"
version = "0"

[build-dependencies.id]
path = "../rust-src/id"
version = "0"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
rand    = "=0.7"

[lib]
name = "idiss"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

[target.'cfg(target_arch = "wasm32")'.dependencies]
rand    = { version = "=0.7", features = [ "wasm-bindgen" ] }
# We need to fix the version to 0.2.65 because the other currently available versions (on 10.9.2020)
# produce Wasm that is not valid (it relies on the experimental extension mutable-globals). The bundled wasm-opt tool fails
# to validate and optimize the module, and nodejs 10 fails to run it. mutable-globals are part of the current Wasm standard though
# so once the wasm-bindgen bundles the appropriate tool version we can update, and document that you need nodejs 12 or use the
# --experimental-wasm-mut-globals flag.
wasm-bindgen = "=0.2.65"

[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.release]
codegen-units = 1 # better optimizations
opt-level = 3
