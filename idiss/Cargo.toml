[package]
name = "idiss"
version = "0.4.0"
authors = ["Concordium AG <developers@concordium.com>"]
edition = "2018"
license-file = "../../LICENSE-APACHE"

description = "Exports of the identity issuance functionality needed by the identity provider. Currently supports use from nodejs."

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
nodejs = ["nodejs-sys"]

default = ["nodejs"]

[dependencies]
pairing = "0.15"
ff = "0.5"
hex = "0.4"
serde = "1.0"
serde_json = "1.0"
chrono = "0.4"
ed25519-dalek = "1.0.1"
byteorder = "1.3"

[dependencies.nodejs-sys]
version = "0.12.0"
features = ["napi_v6"]
optional = true

[dependencies.crypto_common]
path = "../rust-src/crypto_common"
version = "0"

[dependencies.curve_arithmetic]
path = "../rust-src/curve_arithmetic"
version = "0"

[dependencies.id]
path = "../rust-src/id"
version = "0"

[dependencies.ps_sig]
path = "../rust-src/ps_sig"
version = "0"

[build-dependencies.crypto_common]
path = "../rust-src/crypto_common"
version = "0"

[build-dependencies.id]
path = "../rust-src/id"
version = "0"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
rand = "=0.7"

[lib]
name = "idiss"
crate-type = ["cdylib", "rlib"]
