image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-haskell:0.14

stages:
  - lint
  - test

.generic:
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    LD_LIBRARY_PATH: "${CI_PROJECT_DIR}/rust-src/target/release:$LD_LIBRARY_PATH"
    STACK_ROOT: "${CI_PROJECT_DIR}/.stack"
    RUSTFLAGS: -Dwarnings
  before_script:
    - rustc --version && cargo --version
    - git config --global url.https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/.insteadOf ssh://git@gitlab.com:22/
  cache:
    paths:
      - .stack
      - .stack-work
      - rust-src/target

.generic-lint:
  extends: .generic

.generic-test:
  extends: .generic

"lint:fmt":
  extends: .generic-lint
  stage: lint
  image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-rust-fmt:2019-11-13
  cache: {}
  script:
    - cargo fmt --manifest-path rust-src/Cargo.toml --all -- --color=always
    - cargo fmt --manifest-path rust-bins/Cargo.toml -- --color=always
    - cargo fmt --manifest-path idiss/Cargo.toml -- --color=always
    - cargo fmt --manifest-path mobile_wallet/Cargo.toml -- --color=always
    - cargo fmt --manifest-path identity-provider-service/Cargo.toml -- --color=always
    - test $(git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | wc -l) -eq 0 || (echo 'You have introduced some unformatted code:'; git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | sed 's/^/* /'; echo 'Please run `cargo fmt` and amend your MR.'; exit 1)

"lint:clippy":
  extends: .generic-lint
  stage: lint
  cache: {}
  script:
    - cargo clippy --manifest-path rust-src/Cargo.toml --color=always --all
    - cargo clippy --manifest-path rust-bins/Cargo.toml --color=always --all --features=vendored-ssl
    - cargo clippy --manifest-path idiss/Cargo.toml --color=always --
    - cargo clippy --manifest-path identity-provider-service/Cargo.toml --color=always --all --features=vendored-ssl

"cargo:build-bench":
  extends: .generic-lint
  stage: test
  cache: {}
  script:
    - cargo bench --manifest-path rust-src/Cargo.toml --color=always --no-run

"stack:test":
  extends: .generic-test
  stage: test
  script:
    - cargo build --manifest-path rust-src/Cargo.toml --release
    - stack --stack-yaml stack.yaml test

"cargo:test":
  extends: .generic-test
  stage: test
  cache: {}
  script:
    - cargo test --manifest-path rust-src/Cargo.toml --all --verbose --release --color=always

"cargo:test-id-service":
  extends: .generic-test
  stage: test
  cache: {}
  script:
    - cargo test --manifest-path identity-provider-service/Cargo.toml --features=vendored-ssl --all --verbose --release --color=always
