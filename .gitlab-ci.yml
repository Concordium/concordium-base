image: "192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base:latest"

stages:
  - lint
  - test

.generic:
  variables:
    LD_LIBRARY_PATH: "/usr/local/lib"
    GIT_SUBMODULE_STRATEGY: recursive

"stack:test":
  extends: .generic
  stage: test
  script:
    - ( cd rust-src && cargo build --release && cp target/release/*.so /usr/local/lib )
    - stack test

"cargo:test":
  extends: .generic
  stage: test
  script:
    - rustc --version && cargo --version
    - stack exec -- ghc --print-libdir
    - ( cd rust-src && cargo test --all --verbose --color=always)

.generic-lint:
  extends: .generic

"lint:fmt":
  extends: .generic-lint
  stage: lint
  image: rustlang/rust:nightly
  before_script:
    - rustup default nightly-2019-03-22
    - rustup component add rustfmt
  script:
    - rustc --version && cargo --version
    - ( cd rust-src && cargo fmt -- --color=always)
    - test $(git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | wc -l) -eq 0 || (echo 'You have introduced some unformatted code:'; git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | sed 's/^/* /'; echo 'Please run `cargo fmt` and amend your MR.'; exit 1)

"lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - rustc --version && cargo --version
    - stack exec -- ghc --print-libdir
    - rustup component add clippy
    - ( cd rust-src && cargo clippy --color=always --all )